* 闭包的理解
简单说来，闭包是函数，并且这个函数有一些绑定的外部自由变量，即使这些自由变量的激活环境已经不存在了。
例子：
<<
def pp():
    n=3
    def nnn(num):
        return num**n
    return nnn

f=pp()
del pp  # 删除pp完全没有影响，闭包在函数产生的时候就有了
def mmm():
    print(123)

f2=mmm

print("-----------------闭包函数:")
print(f.__closure__)
print(type(f.__closure__[0]))
print(f.__closure__[0].cell_contents)
print("-----------------普通函数:")
print(f2.__closure__)

>>
<<
> > > 
-----------------闭包函数:
(<cell at 0x01329150: int object at 0x1E28BE68>,)
<class 'cell'>
3
-----------------普通函数:
None
>>

